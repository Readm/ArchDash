name: 📦 Publish to PyPI

on:
  push:
    tags:
      - 'v*'  # 当推送以 'v' 开头的标签时触发（如 v1.1.0, v1.2.0）
  release:
    types: [published]  # 当发布 GitHub Release 时触发

permissions:
  contents: read

jobs:
  build:
    name: 🏗️ Build distribution
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"
    
    - name: 📦 Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build
    
    - name: 🔧 Build package
      run: python -m build
    
    - name: 🔍 Check package integrity
      run: |
        python -m pip install twine
        python -m twine check dist/*
    
    - name: 📤 Store the distribution packages
      uses: actions/upload-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: 🚀 Publish to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # 仅在标签推送时发布
    needs:
    - build
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    
    - name: 🚀 Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        username: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

  publish-to-testpypi:
    name: 🧪 Publish to TestPyPI
    needs:
    - build
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    
    - name: 🧪 Publish distribution to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        username: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/